name: Benchmark Report

on:
  schedule:
    - cron: "0 4 * * *"

  push:
    branches:
      - master
      - das-644

jobs:
  benchmark:
    runs-on: self-hosted-withcache
    strategy:
      max-parallel: 1
      matrix:
        target: [atomdb, query_agent]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_REPOSITORY: ${{ github.repository }}
      GITHUB_SHA: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install requirements 
        run: |
          sudo bash -c "wget -O - http://45.77.4.33/apt-repo/setup.sh | bash" && \
          sudo apt -y update && \
          sudo apt -y install das-toolbox && \
          sudo das-cli update-version --version 0.4.14

      - name: Clear benchmark output files
        run: rm -rf /tmp/${{ matrix.target }}_benchmark || true

      - name: Run benchmark
        id: run_benchmark
        run: |
          OUTPUT=$(./src/scripts/run_benchmark.sh ${{ matrix.target }} --db small --rel tightly)
          echo "$OUTPUT"

          EXECUTION_ID=$(echo "$OUTPUT" | grep "New execution ID:" | awk '{print $4}')

          echo "execution_id=$EXECUTION_ID" >> $GITHUB_OUTPUT

      - name: Prepare reports for upload
        run: |
          mkdir -p /tmp/reports/${{ matrix.target }}
          find /tmp/${{ matrix.target }}_benchmark -type f -name "*.txt" -exec cp {} /tmp/reports/${{ matrix.target }}/ \;

      - name: Upload benchmark report artifact
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-report-${{ matrix.target }}
          path: /tmp/reports/${{ matrix.target }}
          if-no-file-found: error


  notify-mattermost:
    runs-on: self-hosted-withcache
    needs: benchmark
    strategy:
      matrix:
        target: [atomdb, query_agent]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_REPOSITORY: ${{ github.repository }}
      GITHUB_SHA: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download benchmark artifact
        uses: actions/download-artifact@v4
        with:
          name: benchmark-report-${{ matrix.target }}
          path: benchmarks_reports/${{ matrix.target }}

      - name: Install requirements 
        run: sudo apt -y update && sudo apt -y install miller sqlite3

      - name: Create mattermost message
        run: |
          if [ "${{ matrix.target }}" = "atomdb" ]; then
            TITLE="AtomDB Benchmark Report - Single Thread, 100 iterations"
          else
            TITLE="Query Agent Benchmark Report - Single Thread, 100 iterations"
          fi

          bash .github/scripts/mattermost-benchmark-report.sh \
            "${{ needs.benchmark.outputs[format('{0}', matrix.target)].benchmark_id }}" \
            "$TITLE"

      - name: Notify Mattermost
        uses: singnet/integration-github-mattermost@v0.3.0
        with:
          server-url: ${{ vars.MATTERMOST_SERVER_URL }}
          token: ${{ secrets.MATTERMOST_TOKEN }}
          channel-id: ${{ vars.MATTERMOST_CICD_CHANNEL_ID }}
          attachments-path: benchmarks_reports/${{ matrix.target }}/consolidated_report.txt

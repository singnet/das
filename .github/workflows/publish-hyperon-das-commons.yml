---
name: Publish Hyperon DAS Commons to Pypi

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version"
        required: true

jobs:
  notify-mattermost:
    if: github.ref == 'refs/heads/master'
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create mattermost message
        run: |
          title="New version of hyperon-das-commons"
          deliverable="Library in PyPI named hyperon-das-commons"
          version="${{ github.event.inputs.version }}"
          repository="${{ github.GITHUB_REPOSITORY }}"
          releaseNote=""

          message="${title}\n\nDeliverable:${deliverable}\nNew version available: $version\nRepository: https://github.com/$repository/releases/tag/$version"

          if [ -n "$releaseNote" ]; then
            message="$message\nChanges:\n$releaseNote"
          fi

          escaped_message=$(printf '%s' "$message" | jq -sRr @json | sed 's/\\\\n/\\n/g')

          echo "{\"text\": $escaped_message}" > mattermost.json

      - name: Notify Mattermost
        uses: singnet/integration-github-mattermost@master
        with:
          webhook-url: ${{ secrets.MATTERMOST_WEBHOOK_URL }}

  publish:
    runs-on: self-hosted
    if: github.ref == 'refs/heads/master'
    defaults:
      run:
        working-directory: ./python
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ^3.10

      - name: Install Poetry
        run: |
          pip install poetry
          poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}

      - name: Build and Publishing library version in PyPI
        run: |
          poetry version ${{ github.event.inputs.version }}
          poetry build
          poetry publish --username __token__ --password ${{ secrets.PYPI_API_TOKEN }}
